{"version":3,"sources":["webpack://easydropdown/webpack/universalModuleDefinition","webpack://easydropdown/webpack/bootstrap","webpack://easydropdown/./src/Shared/Util/detectIsScrollable.ts","webpack://easydropdown/./src/Shared/Util/detectBodyCollision.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/index.js","webpack://easydropdown/./src/Shared/Util/composeClassName.ts","webpack://easydropdown/./src/Shared/Util/killSelectReaction.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Constants/ArrayStrategy.js","webpack://easydropdown/./src/State/Option.ts","webpack://easydropdown/./src/State/Group.ts","webpack://easydropdown/./src/State/Constants/ScrollStatus.ts","webpack://easydropdown/./src/State/Constants/BodyStatus.ts","webpack://easydropdown/./src/Renderer/Constants/DomChangeType.ts","webpack://easydropdown/./src/Renderer/Constants/AttributeChangeType.ts","webpack://easydropdown/./src/Events/Handlers/handleWindowClick.ts","webpack://easydropdown/./src/Events/Constants/KeyCodes.ts","webpack://easydropdown/./src/Shared/Util/Constants/CollisionType.ts","webpack://easydropdown/./src/Events/Constants/Selectors.ts","webpack://easydropdown/./src/Shared/Util/closestParent.ts","webpack://easydropdown/./src/Config/Config.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Messages.js","webpack://easydropdown/./node_modules/helpful-merge/dist/merge.js","webpack://easydropdown/./src/Easydropdown/cache.ts","webpack://easydropdown/./src/Easydropdown/EasydropdownFacade.ts","webpack://easydropdown/./src/Easydropdown/Timers.ts","webpack://easydropdown/./src/State/State.ts","webpack://easydropdown/./src/State/StateMapper.ts","webpack://easydropdown/./src/State/resolveActions.ts","webpack://easydropdown/./src/State/StateManager.ts","webpack://easydropdown/./src/State/InjectedActions/scrollToView.ts","webpack://easydropdown/./src/State/InjectedActions/closeOthers.ts","webpack://easydropdown/./src/Shared/Util/setGeometry.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectMutation.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectChange.ts","webpack://easydropdown/./src/Renderer/domPatch.ts","webpack://easydropdown/./src/Renderer/PatchCommand.ts","webpack://easydropdown/./src/Renderer/domDiff.ts","webpack://easydropdown/./src/Renderer/Dom.ts","webpack://easydropdown/./src/Renderer/Components/value.ts","webpack://easydropdown/./src/Renderer/Components/arrow.ts","webpack://easydropdown/./src/Renderer/Components/head.ts","webpack://easydropdown/./src/Renderer/Components/option.ts","webpack://easydropdown/./src/Renderer/Components/group.ts","webpack://easydropdown/./src/Renderer/Components/body.ts","webpack://easydropdown/./src/Renderer/Components/root.ts","webpack://easydropdown/./src/Shared/Util/createDomElementFromHtml.ts","webpack://easydropdown/./src/Renderer/Renderer.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeypress.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownUp.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownDown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectInvalid.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectFocus.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectBlur.ts","webpack://easydropdown/./src/Events/Handlers/handleItemsListScroll.ts","webpack://easydropdown/./src/Events/Handlers/handleHeadClick.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMouseover.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyClick.ts","webpack://easydropdown/./src/Events/getEventsList.ts","webpack://easydropdown/./src/Events/EventBinding.ts","webpack://easydropdown/./src/Shared/Util/throttle.ts","webpack://easydropdown/./src/Events/bindEvents.ts","webpack://easydropdown/./src/Config/ClassNames.ts","webpack://easydropdown/./src/Config/Callbacks.ts","webpack://easydropdown/./src/Config/Behavior.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/handleMergeError.js","webpack://easydropdown/./node_modules/helpful-merge/dist/FluentMerge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/Config.js","webpack://easydropdown/./src/Easydropdown/Easydropdown.ts","webpack://easydropdown/./src/Easydropdown/factory.ts","webpack://easydropdown/./src/Shared/Polfills/Element.matches.ts","webpack://easydropdown/./node_modules/custom-event-polyfill/custom-event-polyfill.js","webpack://easydropdown/./src/umd.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","dom","itemsList","scrollHeight","body","offsetHeight","CollisionType_1","mapCollisionData","deltaTop","deltaBottom","maxHeight","optionHeight","type","NONE","maxVisibleOptionsOverride","largestDelta","Math","max","TOP","BOTTOM","floor","state","config","bbHead","head","getBoundingClientRect","wh","innerHeight","top","bottom","firstOption","min","behavior","maxVisibleOptions","totalOptions","merge_1","ArrayStrategy_1","ArrayStrategy","tokens","reduce","classNames","token","push","predicate","className","join","select","_a","actions","timers","clearTimeout","keyingTimeoutId","keying","setTimeout","resetKeying","disabled","focus","Option","this","label","isDisabled","Group","options","length","ScrollStatus","BodyStatus","DomChangeType","AttributeChangeType","_","isOpen","close","blur","UP","DOWN","SPACE","ENTER","ESC","CollisionType","OPTION","el","selector","includeSelf","parent","parentNode","matches","document","Behavior_1","Callbacks_1","ClassNames_1","Config","callbacks","seal","MERGE_ERROR","offender","suggestion","TYPE_ERROR_TARGET","target","TYPE_ERROR_SOURCE","source","INVALID_ARRAY_STRATEGY","strategy","Config_1","FluentMerge_1","handleMergeError_1","Messages","merge","sourceKeys","deep","PUSH","REPLACE","indexOf","arrayStrategy","RangeError","TypeError","Array","isArray","apply","toString","getOwnPropertyNames","_i","sourceKeys_1","key","descriptor","getOwnPropertyDescriptor","set","includeReadOnly","includeNonEmurable","useReferenceIfArray","useReferenceIfTargetUnset","err","errorMessage","keys","forEach","method","args","arguments","createFluent","EasydropdownFacade","implementation","open","bind","refresh","destroy","defineProperties","nextValue","Timers","clear","_this","clearInterval","helpful_merge_1","BodyStatus_1","ScrollStatus_1","Group_1","Option_1","State","stateRaw","groups","focusedIndex","selectedIndex","placeholder","scrollStatus","AT_TOP","bodyStatus","CLOSED","isInvalid","isFocused","isUseNativeMode","isScrollable","isSearching","isKeying","map","groupRaw","group","optionRaw","total","getOptionFromIndex","selectedOption","hasValue","showPlaceholderWhenOpen","hasPlaceholder","Boolean","find","hasLabel","OPEN_ABOVE","OPEN_BELOW","AT_BOTTOM","clampMaxVisibleOptions","index","groupStartIndex","getOptionIndexFromValue","_b","_c","State_1","StateMapper","mapFromSelect","selectElement","isWithinGroup","isMobilePlatform","navigator","userAgent","child","children","getAttribute","HTMLOptionElement","mapGroup","lastGroup","mapOption","selected","HTMLOptGroupElement","tagName","j","groupChild","textContent","option","isParentGroupDisabled","isIos","test","isAndroid","isOperaMini","isWindowsPhone","invalidate","validate","topOut","bottomOut","scroll","SCROLLED","makeScrollable","makeUnscrollable","setOptionHeight","collisionData","getIsScrollableStatus","closeOthers","requestAnimationFrame","scrollToView","selectOption","focusOption","shouldScrollToView","scrollToMiddle","abs","search","resetSearch","useNative","resolveActions_1","StateManager","proxyActions","injectedActions","onAction","stateProxy","createStateProxy","getPropertyDescriptorsFromValue","proxy","getPrototypeOf","concat","localDescriptors","isAccessorProperty","readPropertyValue","updatePropertyValue","getScrollTop","currentScrollTop","optionOffsetTop","bodyHeight","scrollOffset","remainder","offset","maxBodyHeight","scrollTop","offsetTop","thisInstance","cache","cache_1","instance","detectIsScrollable_1","POLL_INTERVAL_DURATION","handleMutation","lastOuterHtml","outerHTML","setInterval","lastValue","AttributeChangeType_1","DomChangeType_1","patchAttributes","attributeChanges","raf","change","patchAttribute","ADD","EDIT","setAttribute","REMOVE","removeAttribute","domPatch","node","command","parentElement","replaceChild","newNode","INNER","Text","newTextContent","childCommands","childCommand","childNodes","innerHTML","newInnerHtml","OUTER","FULL","PatchCommand","PatchCommand_1","diffAttributeChanges","prev","next","totalAttributes","attributes","attributesMap","attr1","attr2","sort","attr","domDiff","totalChildNodes","HTMLSelectElement","HTMLElement","childNode","Dom","arrow","humanReadableValue","arrow_1","value_1","composeClassName_1","optionState","optionSelected","focusedOption","optionFocused","optionDisabled","option_1","groupState","groupDisabled","groupHasLabel","groupLabel","group_1","isAtTop","bodyAtTop","isAtBottom","bodyAtBottom","bodyScrollable","styleAttr","gradientTop","gradientBottom","body_1","head_1","rootDisabled","rootInvalid","rootOpen","rootFocused","rootHasValue","isOpenAbove","rootOpenAbove","isOpenBelow","rootOpenBelow","rootUseNative","html","temp","createElement","firstElementChild","createDomElementFromHtml_1","root_1","Dom_1","domDiff_1","domPatch_1","Renderer","render","rootElement","queryDomRefs","injectSelect","update","nextHtml","nextRoot","diffCommand","syncSelectWithValue","classList","remove","tempSelect","Error","event","CustomEvent","bubbles","dispatchEvent","localDom","ref","elements","querySelectorAll","element","KeyCodes","SEARCH_RESET_DURATION","searchResetDuration","keyCode","includes","searchTimeoutId","detectBodyCollision_1","killSelectReaction_1","handlerParams","metaKey","iterations","incrementAmount","round","loop","isClosed","handleSelectKeydownDown_1","handleSelectKeydownUp_1","e","stopPropagation","preventDefault","openOnFocus","closestParent_1","Selectors","optionIndex","handleBodyClick_1","handleBodyMouseover_1","handleHeadClick_1","handleItemsListScroll_1","handleSelectBlur_1","handleSelectFocus_1","handleSelectInvalid_1","handleSelectKeydown_1","handleSelectKeypress_1","handleWindowClick_1","handleWindowClick_2","handler","documentElement","throttle","EventBinding","eventBindingRaw","debounce","boundHandler","passive","unbind","removeEventListener","delay","timerId","last","now","Date","later","difference","throttle_1","EventBinding_1","getEventsList_1","bindEvent","eventBinding","addEventListener","ClassNames","Callbacks","onOpen","onClose","onSelect","Behavior","closeOnSelect","useNativeUiOnMobile","reactToUpdates","getTotalMatching","possibleKey","offendingKey","longer","shorter","leftPointer","leftInnerPointer","leftTotalMatching","lastCommonIndex","rightPointer","rightInnerPointer","rightTotalMatching","longerLastIndex","shorterLastIndex","message","isSealed","isExtensible","reducer","offendingKeyLower","currBestMatch","currKey","totalMatching","toLowerCase","delta","primer","Infinity","bestMatch","FluentMerge","sources","to","from","with","exec","bindEvents_1","Renderer_1","pollForSelectChange_1","pollForSelectMutation_1","setGeometry_1","closeOthers_1","scrollToView_1","StateManager_1","StateMapper_1","Timers_1","Easydropdown","renderer","handleStateUpdate","eventBindings","pollChangeIntervalId","pollMutationIntervalId","init","binding","cacheIndex","splice","cb","arg","Easydropdown_1","EasydropdownFacade_1","selectElementOrSelector","querySelector","cache_2","cachedInstance","factoryFn","decoratedFactory","all","selects","slice","Element","msMatchesSelector","ce","defaultPrevented","params","evt","origPrevent","cancelable","detail","undefined","createEvent","initCustomEvent","Event","factory_1"],"mappings":"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","file":"easydropdown.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easydropdown\"] = factory();\n\telse\n\t\troot[\"easydropdown\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 70);\n","import Dom from '../../Renderer/Dom';\n\nfunction detectIsScrollable(dom: Dom): boolean {\n    const {scrollHeight} = dom.itemsList;\n    const {offsetHeight} = dom.body;\n\n    if (scrollHeight > offsetHeight) {\n        return true;\n    }\n\n    return false;\n}\n\nexport default detectIsScrollable;","import Config         from '../../Config/Config';\nimport Dom            from '../../Renderer/Dom';\nimport State          from '../../State/State';\nimport CollisionType  from './Constants/CollisionType';\nimport ICollisionData from './Interfaces/ICollisionData';\n\nfunction mapCollisionData(deltaTop, deltaBottom, maxHeight, optionHeight): ICollisionData {\n    let type = CollisionType.NONE;\n    let maxVisibleOptionsOverride = -1;\n\n    if (deltaTop <= maxHeight && deltaBottom <= maxHeight) {\n        const largestDelta = Math.max(deltaBottom, deltaTop);\n\n        type = deltaTop < deltaBottom ? CollisionType.TOP : CollisionType.BOTTOM,\n        maxVisibleOptionsOverride = Math.floor(largestDelta / optionHeight);\n    } else if (deltaTop <= maxHeight) {\n        type = CollisionType.TOP;\n    } else if (deltaBottom <= maxHeight) {\n        type = CollisionType.BOTTOM;\n    }\n\n    return {type, maxVisibleOptionsOverride};\n}\n\nfunction detectBodyCollision(state: State, dom: Dom, config: Config): ICollisionData {\n    const bbHead = dom.head.getBoundingClientRect();\n    const wh = window.innerHeight;\n    const deltaTop = bbHead.top;\n    const deltaBottom = wh - bbHead.bottom;\n\n    if (!dom.firstOption) return {\n        type: CollisionType.NONE,\n        maxVisibleOptionsOverride: -1\n    };\n\n    const visibleOptions = Math.min(config.behavior.maxVisibleOptions, state.totalOptions);\n    const maxHeight = visibleOptions * dom.optionHeight;\n\n    return mapCollisionData(deltaTop, deltaBottom, maxHeight, dom.optionHeight);\n}\n\nexport {\n    detectBodyCollision as default,\n    mapCollisionData\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nexports.ArrayStrategy = ArrayStrategy_1.default;\nexports.default = merge_1.default;\n//# sourceMappingURL=index.js.map","function composeClassName(tokens: Array<string|[boolean, string]>): string {\n    return tokens\n        .reduce((classNames, token) => {\n            if (typeof token === 'string') classNames.push(token);\n            else {\n                const [predicate, className] = token;\n\n                if (predicate) classNames.push(className);\n            }\n\n            return classNames;\n        }, [])\n        .join(' ');\n}\n\nexport default composeClassName;","import IHandlerParams from '../../Events/Interfaces/IHandlerParams';\n\nconst killSelectReaction = (select: HTMLSelectElement, {actions, timers}: IHandlerParams): void => {\n    const keyingResetDuration = 100;\n\n    window.clearTimeout(timers.keyingTimeoutId);\n\n    actions.keying();\n\n    timers.keyingTimeoutId = window.setTimeout(() => actions.resetKeying(), keyingResetDuration);\n\n    select.disabled = true;\n\n    setTimeout(() => {\n        select.disabled = false;\n        select.focus();\n    });\n};\n\nexport default killSelectReaction;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy;\n(function (ArrayStrategy) {\n    ArrayStrategy[\"PUSH\"] = \"PUSH\";\n    ArrayStrategy[\"REPLACE\"] = \"REPLACE\";\n})(ArrayStrategy || (ArrayStrategy = {}));\nexports.default = ArrayStrategy;\n//# sourceMappingURL=ArrayStrategy.js.map","class Option {\n    public label:      string  = '';\n    public value:      string  = '';\n    public isDisabled: boolean = false;\n}\n\nexport default Option;","import Option from './Option';\n\nclass Group {\n    public label:      string   = '';\n    public options:    Option[] = [];\n    public isDisabled: boolean  = false;\n\n    public get totalOptions(): number {\n        return this.options.length;\n    }\n\n    public get hasLabel(): boolean {\n        return this.label !== '';\n    }\n}\n\nexport default Group;","enum ScrollStatus {\n    AT_TOP    = 'AT_TOP',\n    SCROLLED  = 'SCROLLED',\n    AT_BOTTOM = 'AT_BOTTOM'\n}\n\nexport default ScrollStatus;","enum BodyStatus {\n    CLOSED     = 'CLOSED',\n    OPEN_ABOVE = 'OPEN_ABOVE',\n    OPEN_BELOW = 'OPEN_BELOW'\n}\n\nexport default BodyStatus;","export enum DomChangeType {\n    NONE    = 'NONE',\n    FULL    = 'FULL',\n    REPLACE = 'REPLACE',\n    INNER   = 'INNER',\n    OUTER   = 'OUTER'\n}\n\nexport default DomChangeType;","enum AttributeChangeType {\n    ADD = 'ADD',\n    EDIT = 'EDIT',\n    REMOVE = 'REMOVE'\n}\n\nexport default AttributeChangeType;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleWindowClick(_, {state, actions, dom}: IHandlerParams): void {\n    if (!state.isOpen) return;\n\n    actions.close();\n\n    dom.select.blur();\n}\n\nexport default handleWindowClick;","export const UP    = 38;\nexport const DOWN  = 40;\nexport const SPACE = 32;\nexport const ENTER = 13;\nexport const ESC   = 27;","enum CollisionType {\n    NONE   = 'NONE',\n    TOP    = 'TOP',\n    BOTTOM = 'BOTTOM'\n}\n\nexport default CollisionType;","export const OPTION = '[data-ref=\"option\"]';","/**\n * Returns the closest parent of a given element matching the\n * provided selector, optionally including the element itself.\n */\n\nfunction closestParent(\n    el: HTMLElement,\n    selector: string,\n    includeSelf: boolean = false\n): HTMLElement {\n    let parent = el.parentNode as HTMLElement;\n\n    if (includeSelf && el.matches(selector)) {\n        return el;\n    }\n\n    while (parent && parent !== document.body) {\n        if (parent.matches && parent.matches(selector)) {\n            return parent;\n        } else if (parent.parentNode) {\n            parent = parent.parentNode as HTMLElement;\n        } else {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nexport default closestParent;","import Behavior   from './Behavior';\nimport Callbacks  from './Callbacks';\nimport ClassNames from './ClassNames';\nimport IConfig    from './Interfaces/IConfig';\n\nclass Config implements IConfig {\n    public callbacks = new Callbacks();\n    public classNames = new ClassNames();\n    public behavior = new Behavior();\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Config;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MERGE_ERROR = function (offender, suggestion) {\n    if (suggestion === void 0) { suggestion = ''; }\n    return \"Unknown property \\\"\" + offender + \"\\\"\" + (suggestion ? \". Did you mean \\\"\" + suggestion + \"\\\"?\" : '');\n};\nexports.TYPE_ERROR_TARGET = function (target) {\n    return \"[Helpful Merge] Target \\\"\" + target + \"\\\" must be a valid object\";\n};\nexports.TYPE_ERROR_SOURCE = function (source) {\n    return \"[Helpful Merge] Source \\\"\" + source + \"\\\" must be a valid object\";\n};\nexports.INVALID_ARRAY_STRATEGY = function (strategy) {\n    return \"[Helpful Merge] Invalid array strategy \\\"\" + strategy + \"\\\"\";\n};\n//# sourceMappingURL=Messages.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Config_1 = require(\"./Config\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar FluentMerge_1 = require(\"./FluentMerge\");\nvar handleMergeError_1 = require(\"./handleMergeError\");\nvar Messages = require(\"./Messages\");\nfunction merge(target, source, options) {\n    if (options === void 0) { options = null; }\n    var sourceKeys = [];\n    var config;\n    if (options instanceof Config_1.default) {\n        config = options;\n    }\n    else {\n        config = new Config_1.default();\n    }\n    if (typeof options === 'boolean' && options === true) {\n        config.deep = true;\n    }\n    else if (options && config !== options && typeof options === 'object') {\n        merge(config, options);\n        if ([ArrayStrategy_1.default.PUSH, ArrayStrategy_1.default.REPLACE].indexOf(config.arrayStrategy) < 0) {\n            throw RangeError(Messages.INVALID_ARRAY_STRATEGY(config.arrayStrategy));\n        }\n    }\n    if (!target || typeof target !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_TARGET(target));\n    }\n    if (!source || typeof source !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_SOURCE(source));\n    }\n    if (Array.isArray(source)) {\n        if (config.arrayStrategy === ArrayStrategy_1.default.PUSH) {\n            // Merge arrays via push()\n            target.push.apply(target, source);\n            return target;\n        }\n        for (var i = 0; i < source.length; i++) {\n            sourceKeys.push(i.toString());\n        }\n    }\n    else {\n        sourceKeys = Object.getOwnPropertyNames(source);\n    }\n    for (var _i = 0, sourceKeys_1 = sourceKeys; _i < sourceKeys_1.length; _i++) {\n        var key = sourceKeys_1[_i];\n        var descriptor = Object.getOwnPropertyDescriptor(source, key);\n        // Skip read-only properties\n        if (typeof descriptor.get === 'function' && !descriptor.set && !config.includeReadOnly)\n            continue;\n        // Skip non-enumerable properties\n        if (!descriptor.enumerable && !config.includeNonEmurable)\n            continue;\n        if (!config.deep ||\n            typeof source[key] !== 'object' ||\n            source[key] === null ||\n            (Array.isArray(source[key]) && config.useReferenceIfArray) ||\n            (!target[key] && config.useReferenceIfTargetUnset)) {\n            // If:\n            // - Shallow merge\n            // - All non-object primatives\n            // - Null pointers\n            // - Arrays, if `useReferenceIfArray` set\n            // - Target prop null or undefined and `useRererenceIfTargetUnset` set\n            try {\n                target[key] = source[key];\n            }\n            catch (err) {\n                handleMergeError_1.default(err, target, key, config.errorMessage);\n            }\n        }\n        else {\n            // Deep merge objects/arrays\n            if (!Object.prototype.hasOwnProperty.call(target, key) || target[key] === null) {\n                // If property does not exist on target, instantiate an empty\n                // object or array to merge into\n                try {\n                    target[key] = Array.isArray(source[key]) ? [] : {};\n                }\n                catch (err) {\n                    handleMergeError_1.default(err, target, key, config.errorMessage);\n                }\n            }\n            // Recursively deep copy objects or arrays\n            merge(target[key], source[key], config);\n        }\n    }\n    return target;\n}\nvar createFluent = function (method) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return (_a = new FluentMerge_1.default())[method].apply(_a, args);\n    var _a;\n}; };\nObject\n    .keys(FluentMerge_1.default.prototype)\n    .forEach(function (method) { return merge[method] = createFluent(method); });\nexports.default = merge;\n//# sourceMappingURL=merge.js.map","import Easydropdown from './Easydropdown';\n\nconst cache: Easydropdown[] = [];\n\nexport default cache;","import Easydropdown from './Easydropdown';\n\nclass EasydropdownFacade {\n    public open: () => void;\n    public close: () => void;\n    public refresh: () => void;\n    public destroy: () => void;\n    public value: string;\n\n    constructor(implementation: Easydropdown) {\n        /**\n         * Programmatically opens the dropdown menu.\n         */\n\n        this.open = implementation.open.bind(implementation);\n\n        /**\n         * Programmatically closes the dropdown menu.\n         */\n\n        this.close = implementation.close.bind(implementation);\n\n        /**\n         * Rebuilds the EasyDropDown instance in response to\n         * options being added or removed.\n         */\n\n        this.refresh = implementation.refresh.bind(implementation);\n\n        /**\n         * Destroys the EasyDropDown instance, unbinding all event handlers\n         * and reverting the provided <select> to its original state.\n         */\n\n        this.destroy = implementation.destroy.bind(implementation);\n\n        Object.defineProperties(this, {\n            value: {\n                get: () => implementation.value,\n                set: (nextValue: string) => implementation.value = nextValue\n            }\n        });\n    }\n}\n\nexport default EasydropdownFacade;","class Timers {\n    public pollChangeIntervalId: number;\n    public pollMutationIntervalId: number;\n    public searchTimeoutId: number;\n    public keyingTimeoutId: number;\n\n    public clear(): void {\n        Object.keys(this).forEach(key => window.clearInterval(this[key]));\n    }\n}\n\nexport default Timers;","import merge from 'helpful-merge';\n\nimport Config       from '../Config/Config';\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport Group        from  './Group';\nimport Option       from './Option';\n\nclass State {\n    public groups:                    Group[]      = [];\n    public focusedIndex:              number       = -1;\n    public selectedIndex:             number       = -1;\n    public optionHeight:              number       = -1;\n    public maxVisibleOptionsOverride: number       = -1;\n    public name:                      string       = '';\n    public placeholder:               string       = 'Select';\n    public scrollStatus:              ScrollStatus = ScrollStatus.AT_TOP;\n    public bodyStatus:                BodyStatus   = BodyStatus.CLOSED;\n    public isDisabled:                boolean      = false;\n    public isInvalid:                 boolean      = false;\n    public isFocused:                 boolean      = false;\n    public isUseNativeMode:           boolean      = false;\n    public isScrollable:              boolean      = false;\n    public isSearching:               boolean      = false;\n    public isKeying:                  boolean      = false;\n\n    private config: Config;\n\n    constructor(stateRaw: any = null, config = new Config()) {\n        this.config = config;\n\n        if (!stateRaw) return;\n\n        merge(this, stateRaw);\n\n        this.groups = this.groups.map((groupRaw) => {\n            const group = merge(new Group(), groupRaw);\n\n            group.options = group.options.map(optionRaw => merge(new Option(), optionRaw));\n\n            return group;\n        });\n    }\n\n    public get totalGroups(): number {\n        return this.groups.length;\n    }\n\n    public get lastGroup(): Group {\n        return this.groups[this.groups.length - 1];\n    }\n\n    public get totalOptions(): number {\n        return this.groups.reduce((total: number, group: Group) => total + group.totalOptions, 0);\n    }\n\n    public get selectedOption(): Option {\n        return this.getOptionFromIndex(this.selectedIndex);\n    }\n\n    public get focusedOption(): Option {\n        return this.getOptionFromIndex(this.focusedIndex);\n    }\n\n    public get value(): string {\n        return this.selectedOption ? this.selectedOption.value : '';\n    }\n\n    public get humanReadableValue(): string {\n        if (\n            !this.hasValue ||\n            (\n                this.config.behavior.showPlaceholderWhenOpen &&\n                this.hasPlaceholder &&\n                this.isOpen\n            )\n        ) {\n            return this.placeholder;\n        }\n\n        return this.label;\n    }\n\n    public get label(): string {\n        return this.selectedOption ? this.selectedOption.label : '';\n    }\n\n    public get hasPlaceholder(): boolean {\n        return this.placeholder !== '';\n    }\n\n    public get hasValue(): boolean {\n        return this.value !== '';\n    }\n\n    public get isGrouped(): boolean {\n        return Boolean(this.groups.find(group => group.hasLabel));\n    }\n\n    public get isOpen(): boolean {\n        return this.bodyStatus !== BodyStatus.CLOSED;\n    }\n\n    public get isClosed(): boolean {\n        return this.bodyStatus === BodyStatus.CLOSED;\n    }\n\n    public get isOpenAbove(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_ABOVE;\n    }\n\n    public get isOpenBelow(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_BELOW;\n    }\n\n    public get isAtTop(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_TOP;\n    }\n\n    public get isAtBottom(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_BOTTOM;\n    }\n\n    public get maxBodyHeight(): number {\n        const maxVisibleOptions = (\n            this.maxVisibleOptionsOverride > -1 &&\n            this.config.behavior.clampMaxVisibleOptions\n        ) ?\n            this.maxVisibleOptionsOverride :\n            this.config.behavior.maxVisibleOptions;\n\n        return Math.max(\n            0,\n            this.optionHeight * maxVisibleOptions\n        );\n    }\n\n    public getOptionFromIndex(index: number): Option {\n        let groupStartIndex = 0;\n\n        for (const group of this.groups) {\n            if (index < 0 ) break;\n\n            const groupEndIndex = Math.max(0, groupStartIndex + group.totalOptions - 1);\n\n            if (index <= groupEndIndex) {\n                const option = group.options[index - groupStartIndex];\n\n                return option;\n            }\n\n            groupStartIndex += group.totalOptions;\n        }\n\n        return null;\n    }\n\n    public getOptionIndexFromValue(value: string): number {\n        let index: number = -1;\n\n        for (const group of this.groups) {\n            for (const option of group.options) {\n                index++;\n\n                if (option.value === value) {\n                    return index;\n                }\n            }\n        }\n\n        return -1;\n    }\n}\n\nexport default State;","import merge from 'helpful-merge';\n\nimport Config from '../Config/Config';\nimport Group  from './Group';\nimport Option from './Option';\nimport State  from './State';\n\nclass StateMapper {\n    public static mapFromSelect(selectElement: HTMLSelectElement, config: Config): State {\n        const state = new State(null, config);\n\n        let isWithinGroup = false;\n\n        state.name = selectElement.name;\n        state.isDisabled = selectElement.disabled;\n        state.isUseNativeMode = StateMapper.isMobilePlatform(window.navigator.userAgent);\n\n        for (let i = 0, child: Element; (child = selectElement.children[i]); i++) {\n            if (i === 0 && child.getAttribute('data-placeholder') !== null) {\n                state.placeholder = child.textContent;\n                (child as HTMLOptionElement).value = '';\n\n                continue;\n            }\n\n            if (child instanceof HTMLOptionElement) {\n                if (isWithinGroup === false) {\n                    state.groups.push(StateMapper.mapGroup());\n\n                    isWithinGroup = true;\n                }\n\n                state.lastGroup.options.push(StateMapper.mapOption(child));\n\n                if (child.selected) state.selectedIndex = state.totalOptions - 1;\n            } else if (child instanceof HTMLOptGroupElement) {\n                isWithinGroup = true;\n\n                state.groups.push(StateMapper.mapGroup(child));\n\n                for (let j = 0, groupChild: Element; (groupChild = child.children[j]); j++) {\n                    state.lastGroup.options.push(\n                        StateMapper.mapOption(\n                            groupChild as HTMLOptionElement,\n                            child as HTMLOptGroupElement\n                        )\n                    );\n\n                    if ((groupChild as HTMLOptionElement).selected) state.selectedIndex = state.totalOptions - 1;\n                }\n\n                isWithinGroup = false;\n            } else {\n                throw new TypeError(\n                    `[EasyDropDown] Invalid child tag \"${child.tagName}\" found in provided \\`<select>\\` element`\n                );\n            }\n        }\n\n        return Object.seal(state);\n    }\n\n    private static mapGroup(group: HTMLOptGroupElement = null): Group {\n        return merge(new Group(), {\n            label: group ? group.label : '',\n            isDisabled: group ? group.disabled : false\n        });\n    }\n\n    private static mapOption(option: HTMLOptionElement, group: HTMLOptGroupElement = null): Option {\n        if (!(option instanceof HTMLOptionElement)) throw new TypeError('[EasyDropDown] Invalid markup structure');\n\n        const isParentGroupDisabled = group !== null && group.disabled;\n\n        return merge(new Option(), {\n            label: option.textContent,\n            value: option.value,\n            isDisabled: option.disabled || isParentGroupDisabled\n        });\n    }\n\n    private static isMobilePlatform(userAgent: string): boolean {\n        const isIos = /(ipad|iphone|ipod)/gi.test(userAgent);\n        const isAndroid = /android/gi.test(userAgent);\n        const isOperaMini = /opera mini/gi.test(userAgent);\n        const isWindowsPhone = /windows phone/gi.test(userAgent);\n\n        if (isIos || isAndroid || isOperaMini || isWindowsPhone) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default StateMapper;","import CollisionType  from '../Shared/Util/Constants/CollisionType';\nimport ICollisionData from '../Shared/Util/Interfaces/ICollisionData';\nimport BodyStatus     from './Constants/BodyStatus';\nimport ScrollStatus   from './Constants/ScrollStatus';\nimport IActions       from './Interfaces/IActions';\nimport State          from './State';\n\nconst resolveActions = (state: State): IActions => ({\n    focus(): void {\n        state.isFocused = true;\n    },\n\n    blur(): void {\n        state.isFocused = false;\n    },\n\n    invalidate(): void {\n        state.isInvalid = true;\n    },\n\n    validate(): void {\n        state.isInvalid = false;\n    },\n\n    topOut(): void {\n        state.scrollStatus = ScrollStatus.AT_TOP;\n    },\n\n    bottomOut(): void {\n        state.scrollStatus = ScrollStatus.AT_BOTTOM;\n    },\n\n    scroll(): void {\n        state.scrollStatus = ScrollStatus.SCROLLED;\n    },\n\n    makeScrollable(): void {\n        state.isScrollable = true;\n    },\n\n    makeUnscrollable(): void {\n        state.isScrollable = false;\n    },\n\n    setOptionHeight(optionHeight: number): void {\n        state.optionHeight = optionHeight;\n    },\n\n    open(\n        this: IActions,\n        collisionData: ICollisionData,\n        getIsScrollableStatus: () => boolean,\n        optionHeight: number\n    ): void {\n        if (state.isDisabled) return;\n\n        this.setOptionHeight(optionHeight);\n        this.closeOthers();\n\n        state.maxVisibleOptionsOverride = collisionData.maxVisibleOptionsOverride;\n\n        switch (collisionData.type) {\n            case CollisionType.NONE:\n            case CollisionType.TOP:\n                state.bodyStatus = BodyStatus.OPEN_BELOW;\n\n                break;\n            case CollisionType.BOTTOM:\n                state.bodyStatus = BodyStatus.OPEN_ABOVE;\n\n                break;\n        }\n\n        window.requestAnimationFrame(() => {\n            const isScrollable = getIsScrollableStatus();\n\n            if (isScrollable && !state.isScrollable) {\n                this.makeScrollable();\n            } else if (!isScrollable && state.isScrollable) {\n                this.makeUnscrollable();\n            }\n\n            this.scrollToView(state, true);\n        });\n    },\n\n    close(): void {\n        state.bodyStatus = BodyStatus.CLOSED;\n        state.focusedIndex = -1;\n    },\n\n    selectOption(this: IActions, index: number): void {\n        state.selectedIndex = index;\n\n        if (state.isInvalid) {\n            this.validate();\n        }\n\n        if (state.isSearching) {\n            this.scrollToView(state);\n        } else {\n            this.close();\n        }\n    },\n\n    focusOption(this: IActions, index: number, shouldScrollToView: boolean = false): void {\n        const scrollToMiddle = Math.abs(index - state.focusedIndex) > 1;\n\n        state.focusedIndex = index;\n\n        if (shouldScrollToView) {\n            this.scrollToView(state, scrollToMiddle);\n        }\n    },\n\n    search(): void {\n        state.isSearching = true;\n    },\n\n    resetSearch(): void {\n        state.isSearching = false;\n    },\n\n    keying(): void {\n        state.isKeying = true;\n    },\n\n    resetKeying(): void {\n        state.isKeying = false;\n    },\n\n    useNative(): void {\n        state.isUseNativeMode = true;\n    }\n});\n\nexport default resolveActions;","import merge from 'helpful-merge';\n\nimport IActions            from './Interfaces/IActions';\nimport IOnAction           from './Interfaces/IOnAction';\nimport IPropertyDescriptor from './Interfaces/IPropertyDescriptor';\nimport resolveActions      from './resolveActions';\nimport State               from './State';\n\nclass StateManager {\n    public static proxyActions(state: State, injectedActions: any, onAction: IOnAction): IActions {\n        const stateProxy = StateManager.createStateProxy(state, onAction);\n        const actions = resolveActions(stateProxy);\n\n        merge(actions, injectedActions);\n\n        return actions;\n    }\n\n    private static createStateProxy(state: State, onAction: IOnAction): State {\n        return Object.seal(\n            StateManager\n                .getPropertyDescriptorsFromValue(state, onAction)\n                .reduce((proxy, {key, get, set}) => Object.defineProperty(\n                    proxy,\n                    key,\n                    {\n                        enumerable: true,\n                        get,\n                        set\n                    }\n                ), {})\n        );\n    }\n\n    private static getPropertyDescriptorsFromValue(state: State, onAction: IOnAction): IPropertyDescriptor[] {\n        const prototype = Object.getPrototypeOf(state);\n        const allKeys = Object.keys(state).concat(Object.keys(prototype));\n\n        return allKeys\n            .reduce((localDescriptors, key) => {\n                const propertyDescriptor =\n                    Object.getOwnPropertyDescriptor(state, key) ||\n                    Object.getOwnPropertyDescriptor(prototype, key);\n\n                const isAccessorProperty = typeof propertyDescriptor.get === 'function';\n\n                localDescriptors.push({\n                    get: StateManager.readPropertyValue.bind(null, state, key),\n                    set: isAccessorProperty ?\n                        void 0 : StateManager.updatePropertyValue.bind(null, state, key, onAction),\n                    key\n                });\n\n                return localDescriptors;\n            }, []);\n    }\n\n    private static readPropertyValue(state: State, key: string): any {\n        return state[key];\n    }\n\n    private static updatePropertyValue(state: State, key: string, onAction: IOnAction, value: any): void {\n        if (state[key] === value) return;\n\n        state[key] = value;\n\n        onAction(state, key);\n    }\n}\n\nexport default StateManager;","import Timers from '../../Easydropdown/Timers';\nimport Dom    from '../../Renderer/Dom';\nimport State  from '../../State/State';\n\nfunction getScrollTop(\n    currentScrollTop: number,\n    optionOffsetTop: number,\n    optionHeight: number,\n    bodyHeight: number,\n    scrollOffset: number\n): number {\n    const max = currentScrollTop + bodyHeight;\n\n    let remainder: number;\n\n    if (optionOffsetTop < currentScrollTop) {\n        return optionOffsetTop - scrollOffset;\n    } else if ((remainder = (optionOffsetTop + optionHeight) - max) > 0) {\n        return currentScrollTop + remainder + scrollOffset;\n    }\n\n    return currentScrollTop;\n}\n\nfunction scrollToView(dom: Dom, timers: Timers, state: State, scrollToMiddle: boolean = false): void {\n    const index = Math.max(0, state.focusedIndex > -1 ? state.focusedIndex : state.selectedIndex);\n    const option = dom.option[index];\n    const offset = scrollToMiddle ? (state.maxBodyHeight / 2) - (option.offsetHeight / 2) : 0;\n\n    const scrollTop = getScrollTop(\n        dom.itemsList.scrollTop,\n        option.offsetTop,\n        option.offsetHeight,\n        state.maxBodyHeight,\n        offset\n    );\n\n    if (scrollTop === dom.itemsList.scrollTop) return;\n\n    dom.itemsList.scrollTop = scrollTop;\n}\n\nexport {\n    getScrollTop,\n    scrollToView as default\n};","import Easydropdown from '../../Easydropdown/Easydropdown';\n\nfunction closeOthers(thisInstance: Easydropdown, cache: Easydropdown[]): void {\n    for (const instance of cache) {\n        if (instance !== thisInstance) instance.actions.close();\n    }\n}\n\nexport default closeOthers;","import Dom                from '../../Renderer/Dom';\nimport IActions           from '../../State/Interfaces/IActions';\nimport State              from '../../State/State';\nimport detectIsScrollable from './detectIsScrollable';\n\nfunction setGeometry(state: State, actions: IActions, dom: Dom): void {\n    if (!dom.body) return;\n\n    const isScrollable = detectIsScrollable(dom);\n\n    if (isScrollable && !state.isScrollable) {\n        actions.makeScrollable();\n    } else if (!isScrollable && state.isScrollable) {\n        actions.makeUnscrollable();\n    }\n\n    actions.setOptionHeight(dom.optionHeight);\n}\n\nexport default setGeometry;","import State from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 300;\n\nfunction pollForSelectMutation(selectElement: HTMLSelectElement, state: State, handleMutation: () => void): number {\n    let lastOuterHtml: string = selectElement.outerHTML;\n\n    const pollIntervalId = window.setInterval(() => {\n        const {outerHTML} = selectElement;\n\n        if (outerHTML !== lastOuterHtml && !state.isKeying) {\n            handleMutation();\n        }\n\n        lastOuterHtml = outerHTML;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectMutation;","import IActions from '../../State/Interfaces/IActions';\nimport State    from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 100;\n\nfunction pollForSelectChange(selectElement: HTMLSelectElement, state: State, actions: IActions): number {\n    let lastValue: string = selectElement.value;\n\n    const pollIntervalId = window.setInterval(() => {\n        if (selectElement.value !== lastValue) {\n            const selectedIndex = state.getOptionIndexFromValue(selectElement.value);\n\n            actions.selectOption(selectedIndex);\n            actions.focusOption(selectedIndex, true);\n        }\n\n        lastValue = selectElement.value;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectChange;","import AttributeChangeType from './Constants/AttributeChangeType';\nimport DomChangeType       from './Constants/DomChangeType';\nimport IAttributeChange    from './Interfaces/IAttributeChange';\nimport PatchCommand        from './PatchCommand';\n\nfunction domPatch(node: Node, command: PatchCommand): Node {\n    switch (command.type) {\n        case DomChangeType.NONE:\n            return node;\n        case DomChangeType.REPLACE:\n            node.parentElement.replaceChild(command.newNode, node);\n\n            return command.newNode;\n        case DomChangeType.INNER:\n            if (node instanceof Text) {\n                node.textContent = command.newTextContent;\n            } else if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            return node;\n        case DomChangeType.OUTER:\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n        case DomChangeType.FULL:\n            if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n    }\n}\n\nfunction patchAttributes(el: HTMLElement, attributeChanges: IAttributeChange[]): void {\n    const raf = window.requestAnimationFrame;\n\n    attributeChanges.forEach(change => {\n        if (raf && ['class', 'style'].indexOf(change.name) > -1) {\n            raf(() => patchAttribute(el, change));\n        } else {\n            patchAttribute(el, change);\n        }\n    });\n}\n\nfunction patchAttribute(el: HTMLElement, change: IAttributeChange): void {\n    switch (change.type) {\n        case AttributeChangeType.ADD:\n        case AttributeChangeType.EDIT:\n            el.setAttribute(change.name, change.value);\n\n            break;\n        case AttributeChangeType.REMOVE:\n            el.removeAttribute(change.name);\n\n            break;\n    }\n}\n\nexport default domPatch;","import DomChangeType    from './Constants/DomChangeType';\nimport IAttributeChange from './Interfaces/IAttributeChange';\n\nclass PatchCommand {\n    public type:             DomChangeType;\n    public newNode:          Node               = null;\n    public newInnerHtml:     string             = '';\n    public newTextContent:   string             = '';\n    public attributeChanges: IAttributeChange[] = [];\n    public childCommands:    PatchCommand[]      = [];\n    public index:            number             = null;\n}\n\nexport default PatchCommand;","import merge from 'helpful-merge';\n\nimport AttributeChangeType  from './Constants/AttributeChangeType';\nimport DomChangeType        from './Constants/DomChangeType';\nimport IAttributeChange     from './Interfaces/IAttributeChange';\nimport IPatchCommand        from './Interfaces/IPatchCommand';\nimport PatchCommand         from './PatchCommand';\n\nfunction domDiff(prev: Node, next: Node): PatchCommand {\n    let totalChildNodes = -1;\n\n    const command = new PatchCommand();\n\n    if (prev instanceof HTMLSelectElement) {\n        command.type = DomChangeType.NONE;\n\n        return command;\n    }\n\n    if (prev instanceof Text && next instanceof Text) {\n        if (prev.textContent === next.textContent) {\n            command.type = DomChangeType.NONE;\n        } else {\n            command.type = DomChangeType.INNER;\n            command.newTextContent = next.textContent;\n        }\n    } else if (prev instanceof HTMLElement && next instanceof HTMLElement) {\n        if (prev.tagName !== next.tagName) {\n            command.type = DomChangeType.REPLACE;\n            command.newNode = next;\n        } else if (prev.outerHTML === next.outerHTML) {\n            command.type = DomChangeType.NONE;\n        } else if (prev.innerHTML === next.innerHTML) {\n            merge(command, diffAttributeChanges(prev, next));\n        } else {\n            merge(command, diffAttributeChanges(prev, next));\n\n            if (command.attributeChanges.length > 0) {\n                command.type = DomChangeType.FULL;\n            } else {\n                command.type = DomChangeType.INNER;\n            }\n\n            if ((totalChildNodes = prev.childNodes.length) > 0 && totalChildNodes === next.childNodes.length) {\n                for (let i = 0, childNode; (childNode = prev.childNodes[i]); i++) {\n                    command.childCommands.push(domDiff(childNode, next.childNodes[i]));\n                }\n            } else {\n                command.newInnerHtml = next.innerHTML;\n            }\n        }\n    } else {\n        command.type = DomChangeType.REPLACE;\n        command.newNode = next;\n    }\n\n    return command;\n}\n\nfunction diffAttributeChanges(prev: HTMLElement, next: HTMLElement): IPatchCommand {\n    const totalAttributes = Math.max(prev.attributes.length, next.attributes.length);\n    const attributesMap   = {};\n    const undef           = void(0);\n    const attributeChanges: IAttributeChange[] = [];\n\n    for (let i = 0; i < totalAttributes; i++) {\n        const attr1 = prev.attributes[i];\n        const attr2 = next.attributes[i];\n\n        if (attr1 && attributesMap[attr1.name] === undef) {\n            attributesMap[attr1.name] = [];\n        }\n\n        if (attr2 && attributesMap[attr2.name] === undef) {\n            attributesMap[attr2.name] = [];\n        }\n\n        if (attr1) attributesMap[attr1.name][0] = attr1.value;\n        if (attr2) attributesMap[attr2.name][1] = attr2.value;\n    }\n\n    const keys = Object.keys(attributesMap);\n\n    if (keys.length > 1) {\n        keys.sort();\n    }\n\n    for (let i = 0, key; (key = keys[i]); i++) {\n        const attr = attributesMap[key];\n\n        const change: IAttributeChange = {\n            type: null,\n            name: key,\n            value: null\n        };\n\n        if (attr[0] === attr[1]) continue;\n\n        if (attr[0] === undef) {\n            change.type = AttributeChangeType.ADD;\n            change.value = attr[1];\n        } else if (attr[1] === undef) {\n            change.type = AttributeChangeType.REMOVE,\n            change.value = '';\n        } else {\n            change.type = AttributeChangeType.EDIT,\n            change.value = attr[1];\n        }\n\n        attributeChanges.push(change);\n    }\n\n    return {\n        type: DomChangeType.OUTER,\n        attributeChanges\n    };\n}\n\nexport default domDiff;","class Dom {\n    public select:    HTMLSelectElement = null;\n    public root:      HTMLDivElement    = null;\n    public head:      HTMLDivElement    = null;\n    public value:     HTMLDivElement    = null;\n    public body:      HTMLDivElement    = null;\n    public arrow:     HTMLDivElement    = null;\n    public itemsList: HTMLDivElement    = null;\n    public group:     HTMLDivElement[]  = [];\n    public option:    HTMLDivElement[]  = [];\n\n    public get firstOption(): HTMLDivElement {\n        return this.option[0] || null;\n    }\n\n    public get optionHeight(): number {\n        if (!this.firstOption) return -1;\n\n        return this.firstOption.offsetHeight;\n    }\n}\n\nexport default Dom;","import ClassNames from '../../Config/ClassNames';\nimport State      from '../../State/State';\n\nconst value = (state: State, classNames: ClassNames) => {\n    return (`\n        <div class=\"${classNames.value}\" data-ref=\"value\">\n            ${state.humanReadableValue}\n        </div>\n    `);\n};\n\nexport default value;","import ClassNames from '../../Config/ClassNames';\n\nconst arrow = (_, classNames: ClassNames) => `<div class=\"${classNames.arrow}\"></div>`;\n\nexport default arrow;","import ClassNames from '../../Config/ClassNames';\nimport State      from '../../State/State';\nimport arrow      from './arrow';\nimport value      from './value';\n\nconst head = (state: State, classNames: ClassNames) => (`\n    <div class=\"${classNames.head}\" data-ref=\"head\">\n        ${value(state, classNames)}\n        ${arrow(state, classNames)}\n        <select class=\"${classNames.select}\" data-ref=\"select\"></select>\n    </div>\n`);\n\nexport default head;","import ClassNames       from '../../Config/ClassNames';\nimport composeClassName from '../../Shared/Util/composeClassName';\nimport Option           from '../../State/Option';\nimport State            from '../../State/State';\n\nfunction option(optionState: Option, state: State, classNames: ClassNames): string {\n    const className = composeClassName([\n        classNames.option,\n        [optionState === state.selectedOption, classNames.optionSelected],\n        [optionState === state.focusedOption, classNames.optionFocused],\n        [optionState.isDisabled, classNames.optionDisabled]\n    ]);\n\n    return `<div class=\"${className}\" data-ref=\"option\" title=\"${optionState.label}\">${optionState.label}</div>`;\n}\n\nexport default option;","import ClassNames       from '../../Config/ClassNames';\nimport composeClassName from '../../Shared/Util/composeClassName';\nimport Group            from '../../State/Group';\nimport State            from '../../State/State';\nimport option           from './option';\n\nconst group = (groupState: Group, state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.group,\n        [groupState.isDisabled, classNames.groupDisabled],\n        [groupState.hasLabel, classNames.groupHasLabel]\n    ]);\n\n    return (`\n        <div class=\"${className}\" data-ref=\"group\">\n            ${groupState.hasLabel ?\n                `<div class=\"${classNames.groupLabel}\">${groupState.label}</div>` : ''\n            }\n            ${groupState.options.map(optionState => option(optionState, state, classNames)).join('')}\n        </div>\n    `);\n};\n\nexport default group;","import ClassNames       from '../../Config/ClassNames';\nimport composeClassName from '../../Shared/Util/composeClassName';\nimport State            from '../../State/State';\nimport group            from './group';\n\nfunction body(state: State, classNames: ClassNames): string {\n    const className = composeClassName([\n        classNames.body,\n        [state.isAtTop, classNames.bodyAtTop],\n        [state.isAtBottom, classNames.bodyAtBottom],\n        [state.isScrollable, classNames.bodyScrollable]\n    ]);\n\n    const styleAttr = state.isOpen ?\n        `style=\"max-height: ${state.maxBodyHeight}px;\"` : '';\n\n    return (`\n        <div class=\"${className}\" data-ref=\"body\">\n            <div class=\"${classNames.itemsList}\"\n                data-ref=\"itemsList\"\n                ${styleAttr}>\n                ${state.groups.map(groupState => group(groupState, state, classNames)).join('')}\n            </div>\n            <div class=${classNames.gradientTop}></div>\n            <div class=${classNames.gradientBottom}></div>\n        </div>\n    `);\n}\n\nexport default body;","import ClassNames       from '../../Config/ClassNames';\nimport composeClassName from '../../Shared/Util/composeClassName';\nimport State            from '../../State/State';\nimport body             from './body';\nimport head             from './head';\n\nconst root = (state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.root,\n        [state.isDisabled, classNames.rootDisabled],\n        [state.isInvalid, classNames.rootInvalid],\n        [state.isOpen, classNames.rootOpen],\n        [state.isFocused, classNames.rootFocused],\n        [state.hasValue, classNames.rootHasValue],\n        [state.isOpenAbove, classNames.rootOpenAbove],\n        [state.isOpenBelow, classNames.rootOpenBelow],\n        [state.isUseNativeMode, classNames.rootUseNative]\n    ]);\n\n    return (`\n        <div class=\"${className}\">\n            ${head(state, classNames)}\n            ${state.isUseNativeMode ? '' : body(state, classNames)}\n        </div>\n    `);\n};\n\nexport default root;","function createDomElementFromHtml(html: string): Element {\n    const temp = document.createElement('div');\n\n    temp.innerHTML = html;\n\n    return temp.firstElementChild;\n}\n\nexport default createDomElementFromHtml;","import ClassNames               from '../Config/ClassNames';\nimport createDomElementFromHtml from '../Shared/Util/createDomElementFromHtml';\nimport State                    from '../State/State';\nimport root                     from './Components/root';\nimport Dom                      from './Dom';\nimport domDiff                  from './domDiff';\nimport domPatch                 from './domPatch';\n\nclass Renderer {\n    public classNames: ClassNames;\n    public dom: Dom;\n\n    constructor(classNames: ClassNames) {\n        this.dom = new Dom();\n        this.classNames = classNames;\n    }\n\n    public render(state: State, selectElement: HTMLSelectElement): Dom {\n        const html = root(state, this.classNames);\n        const rootElement = createDomElementFromHtml(html) as HTMLDivElement;\n\n        this.dom = new Dom();\n        this.dom.root = rootElement;\n\n        this.dom.option.length = this.dom.group.length = 0;\n\n        Renderer.queryDomRefs(this.dom);\n\n        this.injectSelect(selectElement);\n\n        return this.dom;\n    }\n\n    public update(state: State, key: keyof State): void {\n        const nextHtml = root(state, this.classNames);\n        const nextRoot = createDomElementFromHtml(nextHtml) as HTMLDivElement;\n        const diffCommand = domDiff(this.dom.root, nextRoot);\n\n        domPatch(this.dom.root, diffCommand);\n\n        if (key === 'selectedIndex') {\n            this.syncSelectWithValue(state.value);\n        }\n    }\n\n    public destroy(): void {\n        this.dom.select.classList.remove(this.classNames.select);\n\n        try {\n            this.dom.root.parentElement.replaceChild(this.dom.select, this.dom.root);\n        } catch (err) { /**/ }\n    }\n\n    private injectSelect(selectElement: HTMLSelectElement): void {\n        const parent = selectElement.parentElement;\n        const tempSelect = this.dom.select;\n\n        if (!parent) throw new Error('[EasyDropDown] The provided `<select>` element must exist within a document');\n\n        parent.replaceChild(this.dom.root, selectElement);\n\n        tempSelect.parentElement.replaceChild(selectElement, tempSelect);\n        selectElement.className = this.classNames.select;\n\n        this.dom.select = selectElement;\n    }\n\n    private syncSelectWithValue(value: string): void {\n        if (this.dom.select.value === value) return;\n\n        const event = new CustomEvent('change', {\n            bubbles: true\n        });\n\n        this.dom.select.value = value;\n\n        this.dom.select.dispatchEvent(event);\n    }\n\n    public static queryDomRefs(dom: Dom, keys: string[] = Object.keys(dom)): Dom {\n        return keys\n            .reduce((localDom: Dom, ref: string) => {\n                const selector = `[data-ref=\"${ref}\"]`;\n                const elements = localDom.root.querySelectorAll(selector);\n\n                if (elements.length < 1 || ref === 'root') return localDom;\n\n                const element = elements[0];\n                const value = localDom[ref];\n\n                if (value === null) {\n                    localDom[ref] = element;\n                } else if (Array.isArray(value)) {\n                    Array.prototype.push.apply(value, elements);\n                }\n\n                return localDom;\n            }, dom);\n    }\n}\n\nexport default Renderer;","import * as KeyCodes  from '../Constants/KeyCodes';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nconst SEARCH_RESET_DURATION = 1200;\n\nfunction handleSelectKeypress(\n    {keyCode}: KeyboardEvent,\n    {actions, timers, state}: IHandlerParams,\n    searchResetDuration = SEARCH_RESET_DURATION\n): void {\n    if (state.isUseNativeMode || [KeyCodes.UP, KeyCodes.DOWN].includes(keyCode)) return;\n\n    window.clearTimeout(timers.searchTimeoutId);\n\n    actions.search();\n\n    timers.searchTimeoutId = window.setTimeout(() => actions.resetSearch(), searchResetDuration);\n}\n\nexport default handleSelectKeypress;","import detectBodyCollision from '../../Shared/Util/detectBodyCollision';\nimport detectIsScrollable  from '../../Shared/Util/detectIsScrollable';\nimport killSelectReaction  from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownUp(\n    {keyCode, metaKey, target}: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {state, config, dom, actions} = handlerParams;\n\n    let focusedIndex = state.focusedIndex > -1 ?\n        state.focusedIndex : state.selectedIndex;\n\n    let iterations = 0;\n    let incrementAmount: number = 1;\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleOptions)\n        );\n    }\n\n    do {\n        focusedIndex -= incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex < 0) {\n            focusedIndex = config.behavior.loop ? state.totalOptions - 1 : 0;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations < state.totalOptions\n    );\n\n    if (state.isClosed) {\n        actions.open(\n            detectBodyCollision(state, dom, config),\n            () => detectIsScrollable(dom),\n            dom.optionHeight\n        );\n    }\n}\n\nexport default handleSelectKeydownUp;","import detectBodyCollision from '../../Shared/Util/detectBodyCollision';\nimport detectIsScrollable  from '../../Shared/Util/detectIsScrollable';\nimport killSelectReaction  from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownDown(\n    {keyCode, metaKey, target}: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {state, dom, actions, config} = handlerParams;\n\n    let focusedIndex: number = state.focusedIndex > -1 ?\n    state.focusedIndex : state.selectedIndex;\n\n    let iterations: number = 0;\n    let incrementAmount: number = 1;\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleOptions)\n        );\n    }\n\n    do {\n        focusedIndex += incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex >= state.totalOptions) {\n            focusedIndex = config.behavior.loop ? 0 : state.totalOptions - 1;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations <= state.totalOptions\n    );\n\n    if (state.isClosed) {\n        actions.open(\n            detectBodyCollision(state, dom, config),\n            () => detectIsScrollable(dom),\n            dom.optionHeight\n        );\n\n        return;\n    }\n}\n\nexport default handleSelectKeydownDown;","import detectBodyCollision     from '../../Shared/Util/detectBodyCollision';\nimport detectIsScrollable      from '../../Shared/Util/detectIsScrollable';\nimport killSelectReaction      from '../../Shared/Util/killSelectReaction';\nimport * as KeyCodes           from '../Constants/KeyCodes';\nimport IHandlerParams          from '../Interfaces/IHandlerParams';\nimport handleSelectKeydownDown from './handleSelectKeydownDown';\nimport handleSelectKeydownUp   from './handleSelectKeydownUp';\n\nfunction handleSelectKeydown(e: KeyboardEvent, handlerParams: IHandlerParams): void {\n    const {keyCode, target} = e;\n    const {state, actions, dom, config} = handlerParams;\n\n    if (state.isUseNativeMode || state.isDisabled) return;\n\n    switch (keyCode) {\n        case KeyCodes.DOWN:\n            handleSelectKeydownDown(e, handlerParams);\n\n            break;\n        case KeyCodes.UP:\n            handleSelectKeydownUp(e, handlerParams);\n\n            break;\n        case KeyCodes.SPACE:\n            if (state.isSearching) {\n                e.stopPropagation();\n                // e.preventDefault();\n\n                return;\n            }\n\n        case KeyCodes.ENTER:\n            e.stopPropagation();\n            e.preventDefault();\n\n            killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n            if (state.isOpen) {\n                actions.selectOption(state.focusedIndex);\n            } else {\n                actions.open(\n                    detectBodyCollision(state, dom, config),\n                    () => detectIsScrollable(dom),\n                    dom.optionHeight\n                );\n            }\n\n            break;\n        case KeyCodes.ESC:\n            actions.close();\n\n            break;\n    }\n}\n\nexport default handleSelectKeydown;","import IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectInvalid(e: Event, {actions, config, dom}: IHandlerParams): void {\n    actions.invalidate();\n}\n\nexport default handleSelectInvalid;","import detectBodyCollision from '../../Shared/Util/detectBodyCollision';\nimport detectIsScrollable  from '../../Shared/Util/detectIsScrollable';\nimport IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectFocus(e: Event, {actions, config, dom, state}: IHandlerParams): void {\n    actions.focus();\n\n    if (config.behavior.openOnFocus && !state.isUseNativeMode) {\n        actions.open(\n            detectBodyCollision(state, dom, config),\n            () => detectIsScrollable(dom),\n            dom.optionHeight\n        );\n    }\n}\n\nexport default handleSelectFocus;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectBlur(e: Event, {actions, state}: IHandlerParams): void {\n    if (state.isKeying) return;\n\n    actions.blur();\n}\n\nexport default handleSelectBlur;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleItemsListScroll(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const {offsetHeight, scrollHeight, scrollTop} = dom.itemsList;\n\n    if (scrollTop === 0) {\n        actions.topOut();\n    } else if (scrollTop === scrollHeight - offsetHeight) {\n        actions.bottomOut();\n    } else {\n        actions.scroll();\n    }\n}\n\nexport default handleItemsListScroll;","import detectBodyCollision from '../../Shared/Util/detectBodyCollision';\nimport detectIsScrollable  from '../../Shared/Util/detectIsScrollable';\nimport IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleHeadClick(e: MouseEvent, {state, actions, dom, config}: IHandlerParams): void {\n    if (state.isUseNativeMode) return;\n\n    e.stopPropagation();\n\n    if (state.isClosed) {\n        actions.open(\n            detectBodyCollision(state, dom, config),\n            () => detectIsScrollable(dom),\n            dom.optionHeight\n        );\n\n        dom.select.focus();\n    } else {\n        actions.close();\n    }\n}\n\nexport default handleHeadClick;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyMouseover(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option || state.isKeying) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.focusOption(optionIndex);\n}\n\nexport default handleBodyMouseover;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyClick(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.selectOption(optionIndex);\n}\n\nexport default handleBodyClick;","import Dom                   from '../Renderer/Dom';\nimport handleBodyClick       from './Handlers/handleBodyClick';\nimport handleBodyMouseover   from './Handlers/handleBodyMouseover';\nimport handleHeadClick       from './Handlers/handleHeadClick';\nimport handleItemsListScroll from './Handlers/handleItemsListScroll';\nimport handleSelectBlur      from './Handlers/handleSelectBlur';\nimport handleSelectFocus     from './Handlers/handleSelectFocus';\nimport handleSelectInvalid   from './Handlers/handleSelectInvalid';\nimport handleSelectKeydown   from './Handlers/handleSelectKeydown';\nimport handleSelectKeypress  from './Handlers/handleSelectKeypress';\nimport handleWindowClick     from './Handlers/handleWindowClick';\nimport handleWindowResize    from './Handlers/handleWindowClick';\nimport IEventBinding         from './Interfaces/IEventBinding';\n\nconst getEventsList = (dom: Dom): IEventBinding[] => [\n    {\n        target: dom.head,\n        type: 'click',\n        handler: handleHeadClick\n    },\n    {\n        target: dom.body,\n        type: 'click',\n        handler: handleBodyClick\n    },\n    {\n        target: dom.body,\n        type: 'mouseover',\n        handler: handleBodyMouseover\n    },\n    {\n        target: dom.itemsList,\n        type: 'scroll',\n        handler: handleItemsListScroll\n    },\n    {\n        target: dom.select,\n        type: 'keydown',\n        handler: handleSelectKeydown\n    },\n    {\n        target: dom.select,\n        type: 'invalid',\n        handler: handleSelectInvalid\n    },\n    {\n        target: dom.select,\n        type: 'keypress',\n        handler: handleSelectKeypress\n    },\n    {\n        target: dom.select,\n        type: 'focus',\n        handler: handleSelectFocus\n    },\n    {\n        target: dom.select,\n        type: 'blur',\n        handler: handleSelectBlur\n    },\n    {\n        target: document.documentElement,\n        type: 'click',\n        handler: handleWindowClick\n    },\n    {\n        target: window,\n        type: 'resize',\n        handler: handleWindowResize,\n        throttle: 100\n    }\n];\n\nexport default getEventsList;","import merge from 'helpful-merge';\n\nimport IEventBinding from './Interfaces/IEventBinding';\nimport IEventHandler from './Interfaces/IEventHandler';\n\nclass EventBinding implements IEventBinding {\n    public type:         string        = '';\n    public target:       HTMLElement   = null;\n    public debounce:     number        = 0;\n    public throttle:     number        = 0;\n    public handler:      IEventHandler = null;\n    public boundHandler: EventListener = null;\n    public passive:      boolean       = false;\n\n    constructor(eventBindingRaw: IEventBinding|string) {\n        merge(this, eventBindingRaw);\n\n        Object.seal(this);\n    }\n\n    public unbind(): void {\n        if (!this.target) return;\n\n        this.target.removeEventListener(this.type, this.boundHandler);\n    }\n}\n\nexport default EventBinding;","function throttle(\n    handler: (...args: any[]) => void,\n    delay: number\n): (...args: any[]) => void {\n    let timerId = null;\n    let last: number = -Infinity;\n\n    return function(...args): void {\n        const now = Date.now();\n\n        const later = () => {\n            timerId = null;\n\n            handler.apply(this, args);\n\n            last = now;\n        };\n\n        const difference = now - last;\n\n        if (difference >= delay) {\n            later();\n        } else {\n            clearTimeout(timerId);\n\n            timerId = setTimeout(later, delay - difference);\n        }\n    };\n}\n\nexport default throttle;","import throttle       from '../Shared/Util/throttle';\nimport EventBinding   from './EventBinding';\nimport getEventsList  from './getEventsList';\nimport IEventBinding  from './Interfaces/IEventBinding';\nimport IHandlerParams from './Interfaces/IHandlerParams';\n\nfunction bindEvent(handlerParams: IHandlerParams, eventBindingRaw: IEventBinding): EventBinding {\n    const eventBinding = new EventBinding(eventBindingRaw);\n\n    if (!eventBinding.target) return eventBinding;\n\n    const boundHandler = (e) => eventBinding.handler(e, handlerParams);\n\n    if (eventBinding.throttle > 0) {\n        eventBinding.boundHandler = throttle(boundHandler, eventBinding.throttle);\n    } else {\n        eventBinding.boundHandler = boundHandler;\n    }\n\n    eventBinding.target.addEventListener(eventBinding.type, eventBinding.boundHandler);\n\n    return eventBinding;\n}\n\nfunction bindEvents(handlerParams: IHandlerParams): EventBinding[] {\n    return getEventsList(handlerParams.dom).map(bindEvent.bind(null, handlerParams));\n}\n\nexport {\n    bindEvents as default,\n    bindEvent\n};","import IClassNames from './Interfaces/IClassNames';\n\nclass ClassNames implements IClassNames {\n    public root:           string = 'edd';\n    public rootOpen:       string = 'edd-open';\n    public rootOpenAbove:  string = 'edd-open-above';\n    public rootOpenBelow:  string = 'edd-open-below';\n    public rootDisabled:   string = 'edd-disabled';\n    public rootInvalid:    string = 'edd-invalid';\n    public rootFocused:    string = 'edd-focused';\n    public rootHasValue:   string = 'edd-has-value';\n    public rootUseNative:  string = 'edd-use-native';\n    public gradientTop:    string = 'edd-gradient-top';\n    public gradientBottom: string = 'edd-gradient-bottom';\n    public head:           string = 'edd-head';\n    public value:          string = 'edd-value';\n    public arrow:          string = 'edd-arrow';\n    public select:         string = 'edd-select';\n    public body:           string = 'edd-body';\n    public bodyScrollable: string = 'edd-body-scrollable';\n    public bodyAtTop:      string = 'edd-body-at-top';\n    public bodyAtBottom:   string = 'edd-body-at-bottom';\n    public itemsList:      string = 'edd-items-list';\n    public group:          string = 'edd-group';\n    public groupDisabled:  string = 'edd-group-disabled';\n    public groupHasLabel:  string = 'edd-group-has-label';\n    public groupLabel:     string = 'edd-group-label';\n    public option:         string = 'edd-option';\n    public optionDisabled: string = 'edd-option-disabled';\n    public optionFocused:  string = 'edd-option-focused';\n    public optionSelected: string = 'edd-option-selected';\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default ClassNames;","import ICallback from './Interfaces/ICallback';\n\nclass Callbacks {\n    public onOpen:   ICallback = null;\n    public onClose:  ICallback = null;\n    public onSelect: ICallback = null;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Callbacks;","import IBehavior from './Interfaces/IBehavior';\n\nclass Behavior implements IBehavior {\n    public showPlaceholderWhenOpen: boolean = false;\n    public openOnFocus:             boolean = false;\n    public closeOnSelect:           boolean = false;\n    public useNativeUiOnMobile:     boolean = true;\n    public loop:                    boolean = false;\n    public clampMaxVisibleOptions:  boolean = true;\n    public reactToUpdates:          boolean = false;\n    public maxVisibleOptions:       number  = 15;\n}\n\nexport default Behavior;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction handleMergeError(err, target, offendingKey, message) {\n    // Rethrow if any of the following:\n    // - offending key already exists on target\n    // - object not sealed\n    // - is extensible\n    // - error not a TypeError\n    if (Object.hasOwnProperty.call(target, offendingKey) ||\n        !Object.isSealed(target) ||\n        Object.isExtensible(target) ||\n        !(err instanceof TypeError))\n        throw err;\n    var reducer = reduceBestMatch.bind(null, offendingKey, offendingKey.toLowerCase());\n    var primer = { key: '', delta: Infinity, totalMatching: 0 };\n    // Iterate through keys in target, for each key, compare with\n    // the offending key. Greatest number of matching characters wins.\n    var bestMatch = Object.keys(target).reduce(reducer, primer);\n    var suggestion = bestMatch && bestMatch.totalMatching > 1 ? bestMatch.key : '';\n    throw new TypeError(message(offendingKey, suggestion));\n}\n/**\n * Compares current key with current best match.\n */\nfunction reduceBestMatch(offendingKeyLower, offendingKey, currBestMatch, currKey) {\n    var totalMatching = getTotalMatching(currKey.toLowerCase(), offendingKeyLower);\n    var delta = Math.abs(currKey.length - offendingKey.length);\n    if (totalMatching > currBestMatch.totalMatching ||\n        (totalMatching === currBestMatch.totalMatching && delta < currBestMatch.delta)) {\n        // If a greater number of matching characters, or the same\n        // number, but a lesser delta, usurp the best match\n        return { key: currKey, delta: delta, totalMatching: totalMatching };\n    }\n    return currBestMatch;\n}\n/**\n * Returns the number of common, consecutive characters\n * between two strings.\n */\nfunction getTotalMatching(possibleKey, offendingKey) {\n    var longer = possibleKey.length > offendingKey.length ? possibleKey : offendingKey;\n    var shorter = longer === possibleKey ? offendingKey : possibleKey;\n    var leftPointer = 0;\n    var leftInnerPointer = 0;\n    var leftTotalMatching = 0;\n    var lastCommonIndex = -1;\n    for (; leftPointer < longer.length; leftPointer++) {\n        while (leftTotalMatching === 0 &&\n            longer[leftPointer] !== shorter[leftInnerPointer] &&\n            leftInnerPointer < shorter.length) {\n            // No match at present, move innerPointer through all possible\n            // indices until a match is found\n            leftInnerPointer++;\n        }\n        if (longer[leftPointer] === shorter[leftInnerPointer]) {\n            // Match found\n            if (lastCommonIndex !== leftPointer - 1) {\n                // If beginning of a new match, reset total common\n                leftTotalMatching = 0;\n            }\n            lastCommonIndex = leftPointer;\n            leftTotalMatching++;\n            leftInnerPointer++;\n            // Whole word matched, end\n            if (leftTotalMatching === shorter.length)\n                break;\n        }\n        else if (leftTotalMatching > 1) {\n            // No match, but at least two common characters found, end\n            break;\n        }\n        else {\n            // No match at this index, reset\n            leftTotalMatching = leftInnerPointer = 0;\n        }\n    }\n    lastCommonIndex = -1;\n    var rightPointer = 0;\n    var rightInnerPointer = 0;\n    var rightTotalMatching = 0;\n    var longerLastIndex = longer.length - 1;\n    var shorterLastIndex = shorter.length - 1;\n    // As above, but from right to left\n    for (; rightPointer < longer.length - leftPointer; rightPointer++) {\n        while (rightTotalMatching === 0 &&\n            longer[longerLastIndex - rightPointer] !== shorter[shorterLastIndex - rightInnerPointer] &&\n            rightInnerPointer < shorter.length) {\n            rightInnerPointer++;\n        }\n        if (longer[longerLastIndex - rightPointer] === shorter[shorterLastIndex - rightInnerPointer]) {\n            if (lastCommonIndex !== rightPointer - 1)\n                rightTotalMatching = 0;\n            lastCommonIndex = rightPointer;\n            rightTotalMatching++;\n            rightInnerPointer++;\n        }\n        else if (rightTotalMatching > 1) {\n            break;\n        }\n        else {\n            rightTotalMatching = rightInnerPointer = 0;\n        }\n    }\n    return Math.min(shorter.length, leftTotalMatching + rightTotalMatching);\n}\nexports.getTotalMatching = getTotalMatching;\nexports.default = handleMergeError;\n//# sourceMappingURL=handleMergeError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar FluentMerge = /** @class */ (function () {\n    function FluentMerge() {\n        this.target = null;\n        this.sources = [];\n        this.config = {};\n    }\n    /**\n     * Supplies a fluent merge instance with a target object to merge into and return.\n     */\n    FluentMerge.prototype.to = function (target) {\n        this.target = target;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with one or more source objects to merge from, in right to left order.\n     */\n    FluentMerge.prototype.from = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        this.sources = sources;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with a configuration object of one or more options.\n     */\n    FluentMerge.prototype.with = function (options) {\n        this.config = options;\n        return this;\n    };\n    /**\n     * Executes a fluent merge instance, merging all provided sources into the\n     * target, as per any provided configuration, and returning a reference to\n     * the target.\n     */\n    FluentMerge.prototype.exec = function () {\n        var _this = this;\n        return this.sources.reduce(function (target, source) { return merge_1.default(target, source, _this.config); }, this.target || {});\n    };\n    return FluentMerge;\n}());\nexports.default = FluentMerge;\n//# sourceMappingURL=FluentMerge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar Messages = require(\"./Messages\");\nvar Config = /** @class */ (function () {\n    function Config() {\n        this.deep = false;\n        this.useReferenceIfTargetUnset = false;\n        this.useReferenceIfArray = false;\n        this.includeReadOnly = false;\n        this.includeNonEmurable = false;\n        this.arrayStrategy = ArrayStrategy_1.default.REPLACE;\n        this.errorMessage = Messages.MERGE_ERROR;\n        Object.seal(this);\n    }\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","import merge from 'helpful-merge';\n\nimport Config                from '../Config/Config';\nimport ICallback             from '../Config/Interfaces/ICallback';\nimport IConfig               from '../Config/Interfaces/IConfig';\nimport bindEvents            from '../Events/bindEvents';\nimport EventBinding          from '../Events/EventBinding';\nimport Dom                   from '../Renderer/Dom';\nimport Renderer              from '../Renderer/Renderer';\nimport detectBodyCollision   from '../Shared/Util/detectBodyCollision';\nimport detectIsScrollable    from '../Shared/Util/detectIsScrollable';\nimport pollForSelectChange   from '../Shared/Util/pollForSelectChange';\nimport pollForSelectMutation from '../Shared/Util/pollForSelectMutation';\nimport setGeometry           from '../Shared/Util/setGeometry';\nimport closeOthers           from '../State/InjectedActions/closeOthers';\nimport scrollToView          from '../State/InjectedActions/scrollToView';\nimport IActions              from '../State/Interfaces/IActions';\nimport State                 from '../State/State';\nimport StateManager          from '../State/StateManager';\nimport StateMapper           from '../State/StateMapper';\nimport cache                 from './cache';\nimport Timers                from './Timers';\n\nclass Easydropdown {\n    public actions: IActions;\n\n    private config: Config;\n    private state: State;\n    private dom: Dom;\n    private eventBindings: EventBinding[];\n    private renderer: Renderer;\n    private timers: Timers;\n\n    constructor(selectElement: HTMLSelectElement, options: IConfig) {\n        this.config = merge(new Config(), options, true);\n        this.state = StateMapper.mapFromSelect(selectElement, this.config);\n        this.renderer = new Renderer(this.config.classNames);\n        this.dom = this.renderer.render(this.state, selectElement);\n        this.timers = new Timers();\n\n        this.actions = StateManager.proxyActions(this.state, {\n            closeOthers: closeOthers.bind(null, this, cache),\n            scrollToView: scrollToView.bind(null, this.dom, this.timers)\n        }, this.handleStateUpdate.bind(this));\n\n        this.eventBindings = bindEvents({\n            actions: this.actions,\n            config: this.config,\n            dom: this.dom,\n            state: this.state,\n            timers: this.timers\n        });\n\n        this.timers.pollChangeIntervalId = pollForSelectChange(this.dom.select, this.state, this.actions);\n\n        if (this.config.behavior.reactToUpdates) {\n            this.timers.pollMutationIntervalId = pollForSelectMutation(\n                this.dom.select,\n                this.state,\n                this.refresh.bind(this)\n            );\n        }\n\n        this.init();\n    }\n\n    public get selectElement(): HTMLSelectElement {\n        return this.dom.select;\n    }\n\n    public get value(): string {\n        return this.state.value;\n    }\n\n    public set value(nextValue: string) {\n        if (typeof nextValue !== 'string') {\n            throw new TypeError('[EasyDropDown] Provided value not a valid string');\n        }\n\n        this.dom.select.value = nextValue;\n    }\n\n    public open(): void {\n        this.actions.open(\n            detectBodyCollision(this.state, this.dom, this.config),\n            () => detectIsScrollable(this.dom),\n            this.dom.optionHeight\n        );\n    }\n\n    public close(): void {\n        this.actions.close();\n    }\n\n    public refresh(): void {\n        this.state = merge(\n            this.state,\n            StateMapper.mapFromSelect(this.dom.select, this.config)\n        );\n\n        this.renderer.update(this.state, 'groups');\n\n        this.dom.group.length = this.dom.option.length = 0;\n\n        Renderer.queryDomRefs(this.dom, ['group', 'option']);\n    }\n\n    public destroy(): void {\n        this.timers.clear();\n        this.eventBindings.forEach(binding => binding.unbind());\n        this.renderer.destroy();\n\n        const cacheIndex = cache.indexOf(this);\n\n        cache.splice(cacheIndex, 1);\n    }\n\n    private init(): void {\n        setGeometry(this.state, this.actions, this.dom);\n    }\n\n    private handleStateUpdate(state: State, key: keyof State): void {\n        const {callbacks} = this.config;\n\n        let cb: ICallback;\n        let arg: any;\n\n        this.renderer.update(state, key);\n\n        switch (key) {\n            case 'bodyStatus':\n                if (state.isOpen) {\n                    cb = callbacks.onOpen;\n                } else {\n                    cb = callbacks.onClose;\n                }\n\n                break;\n            case 'selectedIndex':\n                cb = callbacks.onSelect;\n                arg = state.value;\n\n                break;\n        }\n\n        if (typeof cb === 'function') cb(arg);\n    }\n}\n\nexport default Easydropdown;","import IConfig            from '../Config/Interfaces/IConfig';\nimport cache              from './cache';\nimport Easydropdown       from './Easydropdown';\nimport EasydropdownFacade from './EasydropdownFacade';\nimport IFactory           from './Interfaces/IFactory';\n\nfunction factory(\n    selectElementOrSelector: (HTMLSelectElement|string),\n    options: IConfig = {}\n): EasydropdownFacade {\n    let selectElement = selectElementOrSelector;\n\n    if (typeof selectElementOrSelector === 'string') {\n        selectElement = document.querySelector(selectElementOrSelector) as HTMLSelectElement;\n    }\n\n    if (!(selectElement instanceof HTMLSelectElement)) {\n        throw new TypeError('[EasyDropDown] Invalid select element provided');\n    }\n\n    for (const cachedInstance of cache) {\n        if (cachedInstance.selectElement === selectElement) {\n            return new EasydropdownFacade(cachedInstance);\n        }\n    }\n\n    const instance = new Easydropdown(selectElement, options);\n\n    // @ts-ignore\n\n    cache.push(instance);\n\n    return new EasydropdownFacade(instance);\n}\n\nfunction decorateFactory(factoryFn: any): IFactory {\n    factoryFn.all = (options: IConfig = {}) => {\n        const selects = document.querySelectorAll('select');\n\n        Array.prototype.forEach.call(selects, select => {\n            const instance = factory(select, options);\n\n            return instance;\n        });\n    };\n\n    factoryFn.destroy = () => {\n        const cacheCopy = cache.slice();\n\n        cacheCopy.forEach(instance => instance.destroy());\n    };\n\n    return factoryFn;\n}\n\nconst decoratedFactory = decorateFactory(factory);\n\nexport default decoratedFactory;","if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector;\n}","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","import 'custom-event-polyfill';\n\nimport './Shared/Polfills/Element.matches';\n\nimport factory from './Easydropdown/factory';\n\nmodule.exports = factory;"],"sourceRoot":""}